/*
 * - Use ALT versions of stdio routines:
 *
 *           Function                  Description
 *        ===============  =====================================
 *        alt_printf       Only supports %s, %x, and %c ( < 1 Kbyte)
 *        alt_putstr       Smaller overhead than puts with direct drivers
 *                         Note this function doesn't add a newline.
 *        alt_putchar      Smaller overhead than putchar with direct drivers
 *        alt_getchar      Smaller overhead than getchar with direct drivers
 *
 */
#include "comsheader.h"

#define SMOKE_SEND
#define SMOKE_RECV
#define SRAMTEST

// global vars
char myNum;
char* cch;
char PCS;
char multiplier;

int main()
{
	char cardsInHand[20];
	myNum=0;
	PCS=1;
	cch=cardsInHand;
	multiplier=0;
	int i;

	alt_putstr("Fight The Landlord!\n");
	alt_putstr("Please input your number\n");
	alt_putstr("It should be 1, 2, or 3 and unique\n");
	// do not deal with repeat number so far

/******************************/
	// smoke test
#ifndef SMOKE_RECV
	int buf;
	printf("recver\n");
//	recvstr(64, buf);
	while(1){
		recvchar(&buf);
		printf("%d ", buf);
	}
//	recvchar(buf);
//	alt_printf("%x ", *buf);
#endif
#ifndef SMOKE_SEND
	int j, k;
	printf("sender\n");
	for(k=0; k<128; k++){
		for(j=0; j<128; j++){
			sendchar(j);
			usleep(100);
		}
	}
#endif

#ifdef SRAMTEST
	sramwrite(CHNP, 1);
	sramwrite(CHNP+1, 2);
	sramwrite(CHNP+2, 3);
	printf("%d", sramread(CHNP));
	printf("%d", sramread(CHNP+1));
	printf("%d", sramread(CHNP+2));
#endif
/******************************/

	while(myNum!=1 && myNum!=2 && myNum!=3){
		myNum=(char)getchar()-'0';
		printf("OK, you num is: %d\n", myNum);
	}
	while (1){
		shuffle();
		landlord();
		//play();
	}

	return 0;
}
